name: CI Setup and Quality Checks
run-name: ${{ github.actor }} is running our GitHub Actions
on:
  push:
    branches: [master, dev]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy all apps (ignore affected)'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '22.15.1'

jobs:
  setup:
    name: Setup & Detect Changes
    runs-on: ubuntu-latest
    outputs:
      affected-apps: ${{ steps.affected.outputs.apps }}
      affected-libs: ${{ steps.affected.outputs.libs }}
      has-affected: ${{ steps.affected.outputs.has-affected }}
      should-deploy: ${{ steps.affected.outputs.should-deploy }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma client (auth-service)
        env:
          # Prisma generate reads DATABASE_URL but does not connect; dummy is fine
          DATABASE_URL: postgresql://user:pass@localhost:5432/db?schema=public
        run: yarn prisma:generate

      - name: Detect affected projects
        id: affected
        run: |
          chmod +x .github/scripts/detect-affected.sh
          ./.github/scripts/detect-affected.sh "${{ github.event.inputs.force_deploy }}" "${{ github.event.before }}"

  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.has-affected == 'true' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        check: [lint, test, tscheck]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma client (auth-service)
        env:
          DATABASE_URL: postgresql://user:pass@localhost:5432/db?schema=public
        run: yarn prisma:generate

      - name: Run ${{ matrix.check }}
        run: |
          if [[ "${{ github.event.inputs.force_deploy }}" == "true" ]]; then
            echo "ðŸš€ Force deploy - running ${{ matrix.check }} on all projects"
            yarn nx run-many --all --target=${{ matrix.check }} --parallel=3
          else
            echo "ðŸ“¦ Running ${{ matrix.check }} on affected projects"
            yarn nx affected --target=${{ matrix.check }} --base=origin/master --parallel=3
          fi
