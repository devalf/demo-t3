networks:
  app-network:
    external: true
    name: demo-t3-network

x-logging: &default-logging
  driver: json-file
  options:
    max-size: '10m'
    max-file: '72'

services:
  # Frontend (React + NGINX) - Routed via HAProxy for zero-downtime deployment
  # Service name is dynamically set by blue-green-deploy.sh using COMPOSE_PROJECT_NAME
  client-mx:
    build:
      context: .
      dockerfile: apps/client-mx/Dockerfile
    depends_on:
      - server-nest
    volumes:
      - /opt/demo-t3-shared/www-certbot:/var/www/certbot:ro
    env_file:
      - .env.production
    networks:
      - app-network
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://127.0.0.1/']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Service (NestJS) - Internal only, no external ports
  server-nest:
    build:
      context: .
      dockerfile: apps/server-nest/Dockerfile
    # No external ports - only accessible via nginx proxy
    depends_on:
      - auth-service
    env_file:
      - .env.production
    environment:
      SERVICE_NAME: server-nest
    networks:
      - app-network
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:${NX_PUBLIC_SERVER_NEST_PORT:-8083}/api/health-check',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Auth Service (NestJS + Prisma) - Internal only, no external ports
  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
      args:
        NX_PUBLIC_AUTH_SERVICE_PORT: ${NX_PUBLIC_AUTH_SERVICE_PORT:-8084}
    # No external ports - internal service only
    env_file:
      - .env.production
    environment:
      SERVICE_NAME: auth-service
    networks:
      - app-network
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:${NX_PUBLIC_AUTH_SERVICE_PORT:-8084}/api/health-check',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Email Service (NestJS) - Internal only, no external ports
  email-service:
    build:
      context: .
      dockerfile: apps/email-service/Dockerfile
      args:
        NX_PUBLIC_EMAIL_SERVICE_PORT: ${NX_PUBLIC_EMAIL_SERVICE_PORT:-8085}
    env_file:
      - .env.production
    environment:
      SERVICE_NAME: email-service
    networks:
      - app-network
    restart: unless-stopped
    logging: *default-logging
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          'http://localhost:${NX_PUBLIC_EMAIL_SERVICE_PORT:-8085}/api/health-check',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
