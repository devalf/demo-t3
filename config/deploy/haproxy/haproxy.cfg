# HAProxy for blue/green deployment
# Service naming: {color}-client-mx-1 (e.g., blue-client-mx-1, green-client-mx-1)
# Deploy script controls which color is active by managing container lifecycle

# ----------------------------
# Global settings
# ----------------------------
global
    log stdout format raw local0
    maxconn 5000
    tune.ssl.default-dh-param 2048
    # Admin socket to change weights live
    stats socket /var/run/haproxy/admin.sock user haproxy group haproxy mode 660 level admin
    stats timeout 30s
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384

# ----------------------------
# Defaults
# ----------------------------
defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  http-keep-alive
    timeout connect 5s
    timeout client  60s
    timeout server  60s
    timeout http-request 10s
    retries 3
    default-server inter 20s fall 3 rise 2

# ----------------------------
# Resolvers (optional)
# ----------------------------
# Resolve Docker service names; allow startup if name not yet resolvable
resolvers docker
    parse-resolv-conf
    hold valid 10s

# ----------------------------
# Frontends
# ----------------------------
frontend fe_http
    bind *:80
    mode http
    # Allow ACME HTTP-01 challenges over HTTP without redirect
    acl acme_challenge path_beg /.well-known/acme-challenge/
    use_backend be_acme if acme_challenge
    http-request redirect scheme https code 301 unless acme_challenge

# HTTPS entrypoint
frontend fe_https
    # HAProxy expects fullchain.pem + privkey.pem combined as single .pem file
    # We mount the Let's Encrypt cert directory and combine files at runtime
    bind *:443 ssl crt /etc/haproxy/certs/d-t3.mooo.com/combined.pem

    mode http
    option forwardfor header X-Forwarded-For
    # Set HSTS on HTTPS responses only
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

    # Route all traffic to the weighted blue/green backend
    default_backend be_client_mx

# Optional: HAProxy stats (protect with network ACLs / basic auth as needed)
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /
    stats refresh 5s

# ----------------------------
# Backends
# ----------------------------
# Weighted blue/green backend for client-mx (NGINX)
backend be_client_mx
    mode http
    balance roundrobin
    option httpchk GET /
    http-check expect status 200
    # Blue/Green backends (weights control traffic)
    # Docker Compose adds -1 suffix to container names
    server blue  blue-client-mx-1:80  check weight 100 resolvers docker resolve-prefer ipv4 init-addr libc,none
    server green green-client-mx-1:80 check weight 0   resolvers docker resolve-prefer ipv4 init-addr libc,none

# Backend to serve ACME HTTP-01 challenges via client-mx webroot
backend be_acme
    mode http
    balance roundrobin
    option httpchk GET /
    server blue  blue-client-mx-1:80  check resolvers docker resolve-prefer ipv4 init-addr libc,none
    server green green-client-mx-1:80 check resolvers docker resolve-prefer ipv4 init-addr libc,none
