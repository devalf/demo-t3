networks:
  app-network:
    driver: bridge

services:
  # Auth Service Database
  auth_postgres:
    container_name: auth_postgres
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${NX_PUBLIC_AUTH_DB_POSTGRES_DB}
      POSTGRES_USER: ${NX_PUBLIC_AUTH_DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${NX_PUBLIC_AUTH_DB_POSTGRES_PASSWORD}
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    ports:
      - '${NX_PUBLIC_AUTH_DB_POSTGRES_PORT}:5432'

  # Redis (shared)
  demo_t3_redis:
    container_name: demo_t3_redis
    image: redis:8-alpine
    ports:
      - '${NX_PUBLIC_REDIS_PORT}:6379'

  # === MONITORING STACK ===
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '${NX_PUBLIC_PROMETHEUS_PORT}:9090'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=168h'
      - '--web.enable-lifecycle'
    networks:
      - app-network
    restart: unless-stopped

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - '${NX_PUBLIC_GRAFANA_PORT}:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${NX_PUBLIC_GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  auth_postgres_data:
  products_postgres_data:
  prometheus_data:
  grafana_data:
